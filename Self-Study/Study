Chap 01. C++ 시작
  기계어 - 0, 1만의 이진수를 사용하는 가장 원시적인 언어
  고급언어 - 사람이 이해하고 표현하기 쉬우며, 복잡한 알고리즘이나 다양한 프로그램 구조 및 자료를 효율적으로 표현하는 언어

  C언어에 추가한 기능
    1. 함수 중복 - 매개 변수의 개수나 타입이 서로 다른 동일한 이름의 함수들을 선언할 수 있음.
    2. 디폴트 매개 변수 - 매개 변수에 값이 전달되지 않는 경우 디폴트 값이 전달되도록 함수를 선언할 수 있음.
    3. 참조와 참조 변수 - 변수에 별명을 붙여 변수 공간을 같이 사용할 수 있는 참조의 개념을 도입.
    4. 참조에 의한 호출 - 함수 호출시 참조를 전달할 수 있게 함.
    5. new와 delete 연산자 - 동적 메모리 할당, 해제를 위한 new, delete 연산자를 도입.
    6. 연산자 재정의 - 기존의 연산자에 새로운 연산을 정의할 수 있음.
    7. 제네릭 함수와 클래스 - 함수나 클래스를 데이터 타입에 의존하지 않고 일반화시킬 수 있음.

  C++의 객체 지향 특성
    1. 객체와 캡슐화 - 캡슐화란 객체의 구성 요소들을 캡슐로 싸서 외부의 접근으로부터 내부 요소들을 보호하는 객체 지향 특성.
      1) 캡슐의 역할을 하는 것 - 클래스
      2) 클래스 - 객체를 정의하는 틀 혹은 설계도, 클래스에 멤버 변수와 멤버 함수를 선언
      3) 객체 - 클래스라는 틀에서 생겨난 실체, 멤버 변수 메모리와 멤버 함수 코드를 실제 가지고 프로그램이 실행되는 동안 실존하는 실체 혹은 인스턴스(클래스로 무언가를 만든것이 객체)
        하나의 클래스로 여러 개의 객체를 생성 가능

    2. 상속성 - 객체를 정의하는 클래스 사이에 상속 관계를 두어, 자식 클래스의 객체가 생성될 때 자식 클래스에 선언된 멤버뿐 아니라 부모 클래스에 선언된 멤버들도 함께 가지고 탄생하게 함.
    3. 다형성 - 하나의 기능이 경우에 따라 서로 다르게 보이거나 다르게 작동하는 현상.
      연산자 중복 - 더하기 연산자(+)가 정수 덧셈, 문자열 연결, 객체 더하기 등 피연산자에 따라 서로 다른 연산이 적용
      함수 중복 - 같은 이름의 함수가 매개변수의 개수나 타입이 다르면 서로 다른 함수로 인식
        함수 재정의 / 함수 오버라이딩 - 부모 클래스에 구현된 함수를 동일한 이름으로 자식 클래스에서 다르게 구현

  절차 지향 프로그래밍 - 실행하고자 하는 절차대로 일련의 명령어를 나열하여 프로그래밍 하는 방법 (C 언어)
  객체 지향 프로그래밍 - 프로그램을 보다 실제 세상에 가깝게 모델링하여 실제 세상의 물체를 객체로 표현. 그리고 객체들의 관계, 상호 작용을 객체 지향 기법으로 구현. (C++ 언어)

  컴파일 - 컴파일러는 개발자가 작성한 소스 프로그램이 문법이 맞게 작성되었는지 검사하고, 기계어 코드로 변환하여 목적파일을 생성. 만약 문법에 맞지 않게 작성된 코드를 발견하면 컴파일 오류를 발생.
  링킹 - 실행에 필요한 모든 기계어 코드를 확보하고, 하나의 실행 파일로 만들어지는 과정.
  디버깅 - 프로그램 내에 오류 위치를 발견하거나 문제의 원인을 찾아 수정하는 과정.

Chap 02. C++ 프로그래밍의 기본
  main() 함수
    C 언어와 마찬가지로 C++ 언어 프로그램의 실행 시작점.(종료하면 프로그램이 종료 / return 문 생략 가능)

  cout 객체 - 스크린 장치와 연결된 C++ 표준 출력 스트림 객체.
    << 연산자 - 스트림 삽입 연산자라고 불리며, 오른쪽 피 연산자를 왼쪽 스트림 객체에 삽입.
  cin 객체 - 키보드와 C++ 응용프로그램을 연결하는 C++ 표준 입력 스트림 객체.
    >> 연산자 - 스트림 추출 연산자라고 불리며, 왼쪽 피 연산자인 스트림 객체로부터 데이터를 읽어 오른쪽 피연산자에 지정된 뱐수에 삽입.

  cin.getline(char buf[], int size, char delimitichar)
    buf : 키보드로부터 읽은 문자열을 저장할 배열
    size : buf[] 배열의 크기
    delimitichar(생략가능, 디폴트 값:'\n') : 문자열 입력 끝을 지정하는 구분 문자
      EX) cin.getline(name, 100, \n) : <ENTER> 키가 입력될 때까지 최대 99개의 문자 입력. 띄어쓰기도 읽어줘서 "안 세준" 입력. name은 '안'이 아닌 "안 세준"

Chap 03. 클래스와 객체
  [클래스 선언부]
  class 클래스명 {
  접근지정자:
    --- 
  };

  [클래스 구현부]
  리턴타입 클래스명::함수명(매개변수) {
    return ---; 
  }

  [객체 생성]
